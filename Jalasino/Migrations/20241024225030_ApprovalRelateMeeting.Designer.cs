// <auto-generated />
using System;
using Jalasino;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jalasino.Migrations
{
    [DbContext(typeof(DataContex))]
    [Migration("20241024225030_ApprovalRelateMeeting")]
    partial class ApprovalRelateMeeting
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Jalasino.Models.Approval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MeetingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("Jalasino.Models.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("Jalasino.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApprovalId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MeetingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalId");

                    b.HasIndex("MeetingId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Jalasino.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Jalasino.Models.Approval", b =>
                {
                    b.HasOne("Jalasino.Models.Meeting", "Meeting")
                        .WithMany("Approvals")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("Jalasino.Models.Person", b =>
                {
                    b.HasOne("Jalasino.Models.Approval", null)
                        .WithMany("Actioners")
                        .HasForeignKey("ApprovalId");

                    b.HasOne("Jalasino.Models.Meeting", null)
                        .WithMany("People")
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("Jalasino.Models.Approval", b =>
                {
                    b.Navigation("Actioners");
                });

            modelBuilder.Entity("Jalasino.Models.Meeting", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
